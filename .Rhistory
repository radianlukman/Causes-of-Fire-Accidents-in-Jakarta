#Contoh Pembangkitan 100 data Poisson(2)
x3=rpoisson(100,2)
x3
y3 = rpois(100,2)#poisson dengan lambda 2
y3
ks.test(x3,y3)
qqplot_t=function(y,df)
{
n = length(y)
win.graph()
x=rt(ppoints(n), df)
qqplot(x, y, xlab="Theoritical Quantiles",ylab="Sample Quantiles",
main = expression("Q-Q plot for" ~~ {t}))
qqline(y, distribution = function(p) rt(p, df = df))
}
qqplot_t(a,4)
validasi_t(a)
validasi_t(b)
#Distribusi Bernouli
rbernoulli=function(n,p=0.8)
{
x=rep(0,n)
for(i in 1:n){
u=runif(1,0,1)
if(u<=p) x[i]=1 else x[i]=0
}
return(x)
}
x1=rbernoulli(275,0.6)
x1
y1 = rbinom(275,1,0.6)
y1
ks.test(x1,y1)
#Contoh pembangkitan 100 data Binomial(10,0.6)
x2=rbinomial(275,10,0.6)
x2
#Validasi Data Bangkita
y2 = rbinom(275,10,0.6) #binomial dengan n=10, p=0.6
y2
ks.test(x2,y2)
#Distribusi Poisson
rpoisson=function(n,lambda)
{
x=rep(0,n)
for(i in 1:n){
v=1
a=1
u=runif(1,0,1)
a=a*u
while(a>=exp(-lambda)){
v=v+1
u=runif(1,0,1)
a=a*u
}
x[i]=v-1
}
return(x)
}
#Contoh Pembangkitan 100 data Poisson(2)
x3=rpoisson(275,2)
x3
y3 = rpois(275,2)#poisson dengan lambda 2
y3
ks.test(x3,y3)
ks.test(x,"pnorm",30,5)
y = rnorm(275,30,5)#Fungsi bawaan R
ks.test(y,"pnorm",30,5)
ks.test(b,"pchisq",df=4)
#Contoh
a=random_t(275,4)
a
ks.test(a,"pt",df=4)
#Pembangkitan data Normal
random_norm=function(n,mu=0,sigma=1)
{
z=rnorm(n)
x=mu+(sigma*z)
return(x)
}
# Misalkan data yang akan dibangkitkan mengikuti distribusi normal dengan
# nilai mean = 30 dan standar deviasi = 5.
# dengan jumlah data yang dibangkitkan (n) sebanyak 275
x=random_norm(275,30,5)
y = rnorm(275,30,5)#Fungsi bawaan R
ks.test(y,"pnorm",30,5)
#Validasi Data Normal
validasi_norm=function(x) ## x adalah data bangkitan dari distribusi normal
{
win.graph() ## Membuka jendela gambar yang baru
qqnorm(x) ## plot quantil-quantil normal
qqline(x) ## plot garis quantil normal
}
validasi_norm(y)
y = rnorm(275,30,5)#Fungsi bawaan R
ks.test(y,"pnorm",30,5)
validasi_norm(y)
#Nomor 1
int1 = function(n=100,a=0,b=4) #ini digantai sesuai NIM
{
x=runif(n,a,b)
gx=(x^2)*exp(x)
y=mean(gx)
int=(b-a)*y
return(int)
}
#Untuk beberapa nilai n
int1(10)
int1(100)
int1(1000)
int1(10000)
mm1.sim=function()
{
#Simulasi Model Antrian M/M/1
n=readline('Banyaknya Event =')#Banyaknya kedatangan yang dibangkitkan
lambda=readline('Laju Kedatangan =')#Rata-rata waktu antar kedatangan
miu=readline('Laju Pelayanan =')#Rata-rata waktu pelayanan
n = as.numeric(n)
lambda = as.numeric(lambda)
miu = as.numeric(miu)
Tabel=matrix(rep(0,n*8),ncol=8)
colnames(Tabel)=c('A','B','C','D','E','F','G','H')
Tabel[,1]=seq(1:n)
for (i in 2:n){
Tabel[i,2]=rexp(1,1/lambda)
Tabel[i,3]=Tabel[i-1,3]+Tabel[i,2]
Tabel[i,4]=max(Tabel[i-1,6],Tabel[i,3])
Tabel[i,5]=rexp(1,1/miu)
Tabel[i,6]=Tabel[i,4]+Tabel[i,5]
Tabel[i,7]=Tabel[i,4]-Tabel[i,3]
Tabel[i,8]=Tabel[i,6]-Tabel[i,3]
}
cat('Tabel Simulasi M/M/1\n')
print(Tabel)
rho=mean(Tabel[,5])/mean(Tabel[,2])
Ws = mean(Tabel[,7])
Wq = mean(Tabel[,8])
##CETAK OUTPUT
cat('------------------------------------------\n')
cat('Ukuran Kinerja Sistem\n')
cat('------------------------------------------\n')
cat('Utilization			    =',rho,'\n')
cat('Average Wait Time		=',Ws,'\n')
cat('Average System Time	=',Wq,'\n')
cat('------------------------------------------\n')
win.graph()
par(mfrow=c(1,2))
plot(Tabel[,7],type='l',ylab='Waktu Tunggu dalam Antrian')
plot(Tabel[,8],type='l',ylab='Waktu Tunggu dalam Sistem')
}
mm1.sim() #untuk running sintaks
mm1.sim() #untuk running sintaks
mm1.sim() #untuk running sintaks
mm1.sim() #untuk running sintaks
soal3=arima.sim(model=list(order=c(0,1,1),mean=10,ma=0.6),n=100)
soal3
win.graph()
plot(soal3)
par(mfrow=c(2,1))
acf(soal3, 48)
pacf(soal3, 48)
win.graph()
plot(soal3)
par(mfrow=c(2,1))
acf(soal3, 48)
pacf(soal3, 48)
#Estimasi
model3 <- arima(soal3, c(2, 0, 1))
model3
win.graph()
par(mfrow=c(2,1))
hist(model3$resid,br=12)
qqnorm(model3$resid)
shapiro.test(model3$resid)
soal3.fore = predict(model3, n.ahead=24)
U = soal3.fore$pred + soal3.fore$se
L = soal3.fore$pred - soal3.fore$se
minx = min(soal3,L)
maxx = max(soal3,U)
win.graph()
ts.plot(soal3, soal3.fore$pred, ylim=c(minx,maxx))
lines(soal2.fore$pred, col="red", type="o")
lines(U, col="blue", lty="dashed")
lines(L, col="blue", lty="dashed")
soal3.fore = predict(model3, n.ahead=24)
U = soal3.fore$pred + soal3.fore$se
L = soal3.fore$pred - soal3.fore$se
minx = min(soal3,L)
maxx = max(soal3,U)
win.graph()
ts.plot(soal3, soal3.fore$pred, ylim=c(minx,maxx))
lines(soal3.fore$pred, col="red", type="o")
lines(U, col="blue", lty="dashed")
lines(L, col="blue", lty="dashed")
win.graph()
tsdiag(model3)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
obligasi
shapiro.test(obligasi$rFR0074)
shapiro.test(obligasi$rFR0078)
obligasi<-read_csv(C:/Users/RADIYAN/Desktop/obligasi1.csv")
obligasi<-read_csv("C:/Users/RADIYAN/Desktop/obligasi1.csv")
obligasi<-read.csv("C:/Users/RADIYAN/Desktop/obligasi1.csv")
obligasi
ks.test(obligasi$rFR0053)
data<-read_csv(C:/Users/RADIYAN/Downloads/breastcancer.csv")
data<-read_csv("C:/Users/RADIYAN/Downloads/breastcancer.csv")
library(readr)
data<-read_csv("C:/Users/RADIYAN/Downloads/breastcancer.csv")
data
data<-data[,-1]
data
data<-data[,-c(12:32)]
data<-read_csv("C:/Users/RADIYAN/Downloads/breastcancer.csv")
library(readr)
data<-read_csv("C:/Users/RADIYAN/Downloads/breastcancer.csv")
data<-data[,-c(12:32)]
data<-data[,-1]
head(data)
write.csv(data,"breastcancerr.csv")
mm1.sim=function()
{
#Simulasi Model Antrian M/M/1
n=readline('Banyaknya Event =')#Banyaknya kedatangan yang dibangkitkan
lambda=readline('Laju Kedatangan =')#Rata-rata waktu antar kedatangan
miu=readline('Laju Pelayanan =')#Rata-rata waktu pelayanan
n = as.numeric(n)
lambda = as.numeric(lambda)
miu = as.numeric(miu)
Tabel=matrix(rep(0,n*8),ncol=8)
colnames(Tabel)=c('A','B','C','D','E','F','G','H')
Tabel[,1]=seq(1:n)
for (i in 2:n){
Tabel[,2]=c(7.78,0.93,3.05,1.97,0.08,0.02,1.29,5.69,1.23,1.11)
Tabel[i,3]=Tabel[i-1,3]+Tabel[i,2]
Tabel[i,4]=max(Tabel[i-1,6],Tabel[i,3])
Tabel[,5]=c(1.47,2.72,4.05,6.00,0.97,4.44,0.48,0.35,1.87,0.60)
Tabel[i,6]=Tabel[i,4]+Tabel[i,5]
Tabel[i,7]=Tabel[i,4]-Tabel[i,3]
Tabel[i,8]=Tabel[i,6]-Tabel[i,3]
}
cat('Tabel Simulasi M/M/1\n')
print(Tabel)
rho=mean(Tabel[,5])/mean(Tabel[,2])
Ws = mean(Tabel[,7])
Wq = mean(Tabel[,8])
##CETAK OUTPUT
cat('------------------------------------------\n')
cat('Ukuran Kinerja Sistem\n')
cat('------------------------------------------\n')
cat('Utilization   =',rho,'\n')
cat('Average Wait Time  =',Ws,'\n')
cat('Average System Time =',Wq,'\n')
cat('------------------------------------------\n')
win.graph()
par(mfrow=c(1,2))
plot(Tabel[,7],type='l',ylab='Waktu Tunggu dalam Antrian')
plot(Tabel[,8],type='l',ylab='Waktu Tunggu dalam Sistem')
}
mm1.sim()
mm1.sim()
mm1.sim=function()
{
#Simulasi Model Antrian M/M/1
n=readline('Banyaknya Event =')#Banyaknya kedatangan yang dibangkitkan
lambda=readline('Laju Kedatangan =')#Rata-rata waktu antar kedatangan
miu=readline('Laju Pelayanan =')#Rata-rata waktu pelayanan
n = as.numeric(n)
lambda = as.numeric(lambda)
miu = as.numeric(miu)
Tabel=matrix(rep(0,n*8),ncol=8)
colnames(Tabel)=c('A','B','C','D','E','F','G','H')
Tabel[,1]=seq(1:n)
for (i in 2:n){
Tabel[,2]=c(0,7.78,0.93,3.05,1.97,0.08,0.02,1.29,5.69,1.23,1.11)
Tabel[i,3]=Tabel[i-1,3]+Tabel[i,2]
Tabel[i,4]=max(Tabel[i-1,6],Tabel[i,3])
Tabel[,5]=c(0,1.47,2.72,4.05,6.00,0.97,4.44,0.48,0.35,1.87,0.60)
Tabel[i,6]=Tabel[i,4]+Tabel[i,5]
Tabel[i,7]=Tabel[i,4]-Tabel[i,3]
Tabel[i,8]=Tabel[i,6]-Tabel[i,3]
}
cat('Tabel Simulasi M/M/1\n')
print(Tabel)
rho=mean(Tabel[,5])/mean(Tabel[,2])
Ws = mean(Tabel[,7])
Wq = mean(Tabel[,8])
##CETAK OUTPUT
cat('------------------------------------------\n')
cat('Ukuran Kinerja Sistem\n')
cat('------------------------------------------\n')
cat('Utilization   =',rho,'\n')
cat('Average Wait Time  =',Ws,'\n')
cat('Average System Time =',Wq,'\n')
cat('------------------------------------------\n')
win.graph()
par(mfrow=c(1,2))
plot(Tabel[,7],type='l',ylab='Waktu Tunggu dalam Antrian')
plot(Tabel[,8],type='l',ylab='Waktu Tunggu dalam Sistem')
}
mm1.sim()
soal1<-read_csv(""C:\Users\RADIYAN\Downloads\soal1.csv"")
soal1<-read_csv("C:/Users/RADIYAN/Downloads/soal1.csv")
library(readr)
soal1<-read_csv("C:/Users/RADIYAN/Downloads/soal1.csv")
soal1
soal2<-read_csv("C:/Users/RADIYAN/Download/soal2.csv")
soal2<-read_csv("C:\Users\RADIYAN\Downloads\soal2.csv")
soal2<-read_csv("C:/Users/RADIYAN/Downloads/soal2.csv")
soal2
soal3<-read_csv("C:/Users/RADIYAN/Downloads/soal3.csv")
soal3
pchisq_MC = function(n,a,b,v)
{
x=soal1
fx=((1/((2^(v/2))*gamma(v/2))))*(x^((v/2)-1))*(exp(-x/2))
y=mean(fx)
int=(b-a)*y
return(int)
}
pchisq_MC(100,2,6,3)
pchisq_MC = function(n,a,b,v)
{
x=soal1$x
fx=((1/((2^(v/2))*gamma(v/2))))*(x^((v/2)-1))*(exp(-x/2))
y=mean(fx)
int=(b-a)*y
return(int)
}
pchisq_M(100,2,6,3)
pchisq_MC = function(n,a,b,v)
{
x=soal1$x
fx=((1/((2^(v/2))*gamma(v/2))))*(x^((v/2)-1))*(exp(-x/2))
y=mean(fx)
int=(b-a)*y
return(int)
}
pchisq_MC(100,2,6,3)
z1=soal2$z1
z2=soal2$z2
binormal=function(n,mu1,mu2,sd1,sd2,r)
{
x=matrix(0,n,2)
for(i in 1:n){
x[i,1]=mu1+sd1*z1[i]
x[i,2]=mu2+r*sd2*z1[i]+sd2*sqrt(1-r^2)*z2 [i]
}
return(x)
}
no2<-binormal(100,30,10,15,10,0.9)
no2a1<-mean(no2[,1])
no2a1
no2a2<-sd(no2[,1])
no2a2
no2b1<-mean(no2[,2])
no2b1
no2b2<-sd(no2[,2])
no2b2
no2c<-cor(no2[,1],no2[,2])
no2c
mm1.sim=function()
{
#Simulasi Model Antrian M/M/1
n=readline('Banyaknya Event =')#Banyaknya kedatangan yang dibangkitkan
lambda=readline('Laju Kedatangan =')#Rata-rata waktu antar kedatangan
miu=readline('Laju Pelayanan =')#Rata-rata waktu pelayanan
n = as.numeric(n)
lambda = as.numeric(lambda)
miu = as.numeric(miu)
Tabel=matrix(rep(0,n*8),ncol=8)
colnames(Tabel)=c('A','B','C','D','E','F','G','H')
Tabel[,1]=seq(1:n)
for (i in 2:n){
Tabel[,2]=soal3$kedatangan
Tabel[i,3]=Tabel[i-1,3]+Tabel[i,2]
Tabel[i,4]=max(Tabel[i-1,6],Tabel[i,3])
Tabel[,5]=soal3$pelayanan
Tabel[i,6]=Tabel[i,4]+Tabel[i,5]
Tabel[i,7]=Tabel[i,4]-Tabel[i,3]
Tabel[i,8]=Tabel[i,6]-Tabel[i,3]
}
cat('Tabel Simulasi M/M/1\n')
print(Tabel)
rho=mean(Tabel[,5])/mean(Tabel[,2])
Ws = mean(Tabel[,7])
Wq = mean(Tabel[,8])
##CETAK OUTPUT
cat('------------------------------------------\n')
cat('Ukuran Kinerja Sistem\n')
cat('------------------------------------------\n')
cat('Utilization   =',rho,'\n')
cat('Average Wait Time  =',Ws,'\n')
cat('Average System Time =',Wq,'\n')
cat('------------------------------------------\n')
win.graph()
par(mfrow=c(1,2))
plot(Tabel[,7],type='l',ylab='Waktu Tunggu dalam Antrian')
plot(Tabel[,8],type='l',ylab='Waktu Tunggu dalam Sistem')
}
mm1.sim()
mm1.sim()
mm1.sim()
library(readr)
# Import data
data <- read_csv("D:/1. Project Data/EDA/Datasets/Penyakit Menular di DKI Jakarta/PenyakitMenularDKI.csv")
data
library(ggplot2)
as.numeric(data$jumlah_penderita)
data
is.numeric(data$jumlah_penderita)
is.factor(data$wilayah)
# Membuat data dalam tahun
pertahun <- data %>%
group_by(tahun)
library(dplyr)
# Membuat data dalam tahun
pertahun <- data %>%
group_by(tahun)
pertahun
library(readr)
library(ggplot2)
library(dplyr)
data <- read_csv("PenyebabKebakaranJakarta.csv")
print(data)
unique(data[c("tahun")])
unique(data[c("wilayah")])
unique(data[c("penyebab")])
data$tahun <- as.factor(data$tahun)
data$wilayah <- as.factor(data$wilayah)
data$penyebab <- as.factor(data$penyebab)
print(data)
sapply(data, function(x) sum(is.na(x)))
pertahun <- aggregate(jumlah~tahun, data, sum)
ggplot(pertahun, aes(x=tahun,y=jumlah,group=1)) +
geom_line(stat='identity',color='red',size=1.5) +
geom_point() +
geom_text(aes(label=jumlah),hjust=1.2, color="black", size=6, parse=TRUE) +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta \n 2015-2020") +
labs(x='Tahun',y='Jumlah') +
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'),text = element_text(size=20))
trend <- data %>%
group_by(tahun,penyebab) %>%
summarise(jumlah = sum(jumlah))
ggplot(trend,aes(x = tahun, y = jumlah, colour = penyebab, group = penyebab)) +
geom_line(size=1.2) +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta \n2015-2020") +
labs(x='Tahun',y='Jumlah') +
theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'),text = element_text(size=15)) +
scale_colour_brewer(palette="Set1")
penyebab <- aggregate(jumlah~penyebab, data, sum)
plot(cars)
ggplot(penyebab, aes(x=reorder(penyebab,jumlah),y=jumlah)) +
geom_bar(stat="identity", fill='steelblue') +
geom_text(aes(label=jumlah),hjust=1, color="black", size=6, parse=TRUE) +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta \nBerdasarkan Penyebab") +
labs(x='Penyebab',y='Jumlah') +
theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'),text = element_text(size=15)) +
coord_flip()
wilayah <- aggregate(jumlah~wilayah,data,sum)
ggplot(wilayah, aes(x=reorder(wilayah,jumlah),y=jumlah)) +
geom_bar(stat="identity", fill='steelblue') +
geom_text(aes(label=jumlah),hjust=1, color="black", size=6, parse=TRUE) +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta \nBerdasarkan Kabupaten/Kota Administrasi") +
labs(x='Kabupaten/Kota Administrasi',y='Jumlah') +
theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'),text = element_text(size=15)) +
coord_flip()
ggplot(wilayah, aes(x=reorder(wilayah,jumlah),y=jumlah)) +
geom_bar(stat="identity", fill='steelblue') +
geom_text(aes(label=jumlah),hjust=1, color="black", size=6, parse=TRUE) +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta \nBerdasarkan Kabupaten/Kota Administrasi") +
labs(x='Kabupaten/Kota Administrasi',y='Jumlah') +
theme(plot.title = element_text(hjust = 0.5,size=15,face='bold'),text = element_text(size=15)) +
coord_flip()
ggplot(data, aes(x=penyebab,y=jumlah,fill=penyebab)) +
geom_bar(stat="identity") +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta Berdasarkan Penyebabnya \nDikelompokkan per Tahun") +
labs(x='Penyebab',y='Jumlah') +
theme(plot.title = element_text(hjust=0.5,size=15,face='bold'),axis.text.x=element_text(angle = 90,vjust = 0.5, hjust=1),text = element_text(size=15)) +
facet_wrap(~tahun)
ggplot(data, aes(x=penyebab,y=jumlah,fill=penyebab)) +
geom_bar(stat="identity") +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta Berdasarkan Penyebabnya \nDikelompokkan per Tahun") +
labs(x='Penyebab',y='Jumlah') +
theme(plot.title = element_text(hjust=0.5,size=15,face='bold'),axis.text.x=element_text(angle = 90,vjust = 0.5, hjust=1),text = element_text(size=15)) +
facet_wrap(~tahun)
ggplot(data, aes(x=penyebab,y=jumlah,fill=penyebab)) +
geom_bar(stat="identity") +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta Berdasarkan Penyebabnya \nDikelompokkan per Kabupaten/Kota Administrasi") +
labs(x='Penyebab',y='Jumlah') +
theme(plot.title = element_text(hjust=0.5,size=15,face='bold'),axis.text.x=element_text(angle = 90,vjust = 0.5, hjust=1),text = element_text(size=15)) +
facet_wrap(~wilayah)
ggplot(data, aes(x=penyebab,y=jumlah,fill=penyebab)) +
geom_bar(stat="identity") +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta Berdasarkan Penyebabnya \nDikelompokkan per Kabupaten/Kota Administrasi") +
labs(x='Penyebab',y='Jumlah') +
theme(plot.title = element_text(hjust=0.5,size=15,face='bold'),axis.text.x=element_text(angle = 90,vjust = 0.5, hjust=1),text = element_text(size=15)) +
facet_wrap(~wilayah)
ggplot(data, aes(x=wilayah,y=jumlah,fill=wilayah)) +
geom_bar(stat="identity") +
ggtitle("Jumlah Kejadian Kebakaran di DKI Jakarta \nBerdasarkan Kabupaten/Kota Administrasi \nDikelompokkan per Tahun") +
labs(x='Kabupaten/Kota Administrasi',y='Jumlah') +
theme(plot.title = element_text(hjust=0.5,size=15,face='bold'),axis.text.x=element_text(angle = 90,vjust = 0.5, hjust=1),text = element_text(size=15)) +
facet_wrap(~tahun)
install.packages("htmltools")
install.packages("htmltools")
install.packages('htmltools')
install.packages(htmltools)
install.packages("htmltools")
install.packages("htmltools")
setwd("D:/1. Project Data/EDA/Datasets/Kebakaran di DKI Jakarta")
